# Upstream backend servers for staging
upstream backend {
    server app:3000 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name staging.openlearn.org.in api-staging.openlearn.org.in;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Staging server configuration
server {
    listen 443 ssl http2;
    server_name staging.openlearn.org.in api-staging.openlearn.org.in;

    # SSL Configuration (using same cert with multiple domains)
    ssl_certificate /etc/letsencrypt/live/openlearn.org.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/openlearn.org.in/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS for staging
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Staging environment header
    add_header X-Environment "staging" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    # Security headers (relaxed for staging)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/staging.access.log main;
    error_log /var/log/nginx/staging.error.log;

    # Health check
    location = /health {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # API routes (more relaxed rate limiting for staging)
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Status page
    location = /status-page {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # File uploads (larger limits for staging testing)
    location /uploads/ {
        proxy_pass http://backend;
        client_max_body_size 100M;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Default response for staging
    location / {
        add_header Content-Type text/html;
        return 200 '<!DOCTYPE html><html><head><title>OpenLearn Staging</title></head><body><h1>OpenLearn Backend - Staging Environment</h1><p>API available at <a href="/api/status">/api/status</a></p></body></html>';
    }
}
