# ==== Builder Stage ====
FROM node:18-slim AS builder

# Install OpenSSL and required build tools
RUN apt-get update && apt-get install -y openssl curl && apt-get clean

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci

# Copy source
COPY src ./src
COPY prisma ./prisma

# Generate Prisma client
RUN npx prisma generate

# Build app
RUN npm run build

# ==== Production Stage ====
FROM node:18-slim AS production

# Install PM2 and OpenSSL
RUN apt-get update && apt-get install -y openssl curl && npm install -g pm2 && apt-get clean

# Create app user
RUN addgroup --gid 1001 nodejs && adduser --uid 1001 --gid 1001 --disabled-password --gecos "" openlearn

WORKDIR /app

COPY package*.json ./

# Install only prod deps
RUN npm ci --only=production

# Copy build artifacts
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma
COPY public ./public
COPY ecosystem.config.js .

# Create runtime dirs
RUN mkdir -p logs uploads && chown -R openlearn:nodejs /app

USER openlearn

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

CMD ["pm2-runtime", "start", "ecosystem.config.js", "--env", "production"]
